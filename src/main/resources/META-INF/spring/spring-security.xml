<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
       ">

    <sec:http pattern="/resources/**"
              security="none"/>

    <sec:http pattern="/auth/logout\?success"
              request-matcher="regex"
              security="none"/>

    <sec:http pattern="/api/**"
              auto-config="false"
              use-expressions="true"
              entry-point-ref="http403ForbiddenEntryPoint">

        <sec:csrf/>

        <sec:headers />

        <sec:custom-filter
                ref="userIdMDCPutFilter"
                after="ANONYMOUS_FILTER"/>

        <sec:intercept-url
                pattern="/api/*/timecards/**"
                access="hasAnyRole('ROLE_EMPLOYEE')"/>

    </sec:http>

    <sec:http auto-config="true" use-expressions="true">

        <sec:access-denied-handler ref="customAccessDeniedHandler"/>

        <sec:csrf request-matcher-ref="customCsrfRequestMatcher"/>

        <sec:headers>
            <sec:cache-control/>
            <sec:frame-options policy="SAMEORIGIN"/>
            <sec:hsts/>
            <sec:content-type-options/>
            <sec:xss-protection/>
        </sec:headers>

        <sec:session-management
                invalid-session-url="/error/invalidSession">
            <sec:concurrency-control
                    max-sessions="1"
                    error-if-maximum-exceeded="true" />
        </sec:session-management>

        <sec:form-login
                login-processing-url="/auth/authenticate"
                login-page="/auth/login?encourage"
                username-parameter="${security.login.parameter.username}"
                password-parameter="${security.login.parameter.password}"
                authentication-details-source-ref="customAuthenticationDetailsSource"
                authentication-failure-handler-ref="customAuthenticationFailureHandler"/>

        <sec:logout
                logout-url="/auth/logout"
                delete-cookies="JSESSIONID"
                success-handler-ref="customLogoutSuccessHandler"/>

        <sec:remember-me
                key="${security.rememberMe.key}"
                services-ref="rememberMeServices"  />

        <sec:custom-filter
                ref="userIdMDCPutFilter"
                after="ANONYMOUS_FILTER"/>

        <sec:intercept-url
                pattern="/admin/**"
                access="hasRole('ROLE_ADMIN')"/>
        <sec:intercept-url
                pattern="/vendor/h2/**"
                access="hasRole('ROLE_ADMIN')"/>
        <sec:intercept-url
                pattern="/profile/**"
                access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <sec:intercept-url
                pattern="/timecards/**"
                access="hasAnyRole('ROLE_EMPLOYEE')"/>
        <sec:intercept-url
                pattern="/accounts/**"
                access="hasRole('ROLE_ACCOUNTMNG')"/>
        <sec:intercept-url
                pattern="/auth/login"
                access="!isAuthenticated()"/>

    </sec:http>

    <sec:authentication-manager>
        <sec:authentication-provider user-service-ref="customUserDetailsService">
            <sec:password-encoder ref="passwordEncoder"/>
        </sec:authentication-provider>
    </sec:authentication-manager>

    <!-- Scan Components -->
    <context:component-scan base-package="com.github.kazuki43zoo.web.security"/>

    <bean id="http403ForbiddenEntryPoint"
          class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />

    <!-- Remember Me Service -->
    <bean id="rememberMeServices"
          class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices"
          c:key="${security.rememberMe.key}"
          c:userDetailsService-ref="customUserDetailsService"
          c:tokenRepository-ref="rememberMeTokenRepository"
          p:authenticationDetailsSource-ref="customAuthenticationDetailsSource"
          p:parameter="remember_me"
          p:cookieName="remember_me"
          p:tokenValiditySeconds="#{30 * 24 * 60 * 60}" />

    <!-- Remember Me Token Repository -->
    <bean id="rememberMeTokenRepository"
          class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl"
          p:jdbcTemplate-ref="jdbcTemplate" />
    <tx:advice id="persistentTokenRepositoryTxAdvice">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut
                id="persistentTokenRepositoryMethods"
                expression="execution(* org.springframework.security.web.authentication.rememberme.PersistentTokenRepository.*(..))"/>
        <aop:advisor
                pointcut-ref="persistentTokenRepositoryMethods"
                advice-ref="persistentTokenRepositoryTxAdvice"/>
    </aop:config>

    <!-- AccessDeniedHandler -->
    <bean id="customAccessDeniedHandler"
          class="org.springframework.security.web.access.DelegatingAccessDeniedHandler">
        <constructor-arg index="0">
            <util:map>
                <entry key="org.springframework.security.web.csrf.InvalidCsrfTokenException">
                    <bean class="org.springframework.security.web.access.AccessDeniedHandlerImpl"
                          p:errorPage="/WEB-INF/views/common/error/csrfTokenError.jsp"/>
                </entry>
            </util:map>
        </constructor-arg>
        <constructor-arg index="1">
            <bean class="org.springframework.security.web.access.AccessDeniedHandlerImpl"
                  p:errorPage="/WEB-INF/views/common/error/accessError.jsp"/>
        </constructor-arg>
    </bean>

    <!-- AuthenticationFailureHandler -->
    <bean id="customAuthenticationFailureHandler"
          class="com.github.kazuki43zoo.web.security.CustomAuthenticationFailureHandler"
          p:useForward="true"
          p:defaultFailureUrl="/auth/login/error">
        <property name="exceptionMappings">
            <util:map>
                <entry key="org.springframework.security.authentication.CredentialsExpiredException"
                       value="/password?encourageChange"/>
            </util:map>
        </property>
    </bean>

    <!-- LogoutSuccessHandler -->
    <bean id="customLogoutSuccessHandler"
          class="com.github.kazuki43zoo.web.security.CustomLogoutSuccessHandler"
          p:defaultTargetUrl="/auth/logout?success" />

    <!-- CsrfRequestMatcher -->
    <bean id="customCsrfRequestMatcher"
          class="org.springframework.security.web.util.matcher.AndRequestMatcher">
        <constructor-arg>
            <util:list>
                <bean class="org.springframework.security.web.csrf.CsrfFilter$DefaultRequiresCsrfMatcher"/>
                <bean class="org.springframework.security.web.util.matcher.NegatedRequestMatcher"
                      c:requestMatcher-ref="csrfExclusionPathMatcher" />
            </util:list>
        </constructor-arg>
    </bean>
    <bean id="csrfExclusionPathMatcher"
          class="org.springframework.security.web.util.matcher.OrRequestMatcher">
        <constructor-arg>
            <util:list>
                <bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher"
                      c:pattern="/vendor/h2/**"/>
            </util:list>
        </constructor-arg>
    </bean>

    <!-- UserIdMDCPutFilter -->
    <bean id="userIdMDCPutFilter"
          class="org.terasoluna.gfw.security.web.logging.UserIdMDCPutFilter"/>

</beans>
